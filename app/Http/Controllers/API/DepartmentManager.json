{
  "description": "Department Manager API endpoints for managing department tasks, employees, and workload. This API allows department managers to oversee their department operations, assign tasks to employees, monitor workload distribution, and track performance metrics. Currently implements 7 core endpoints.",
  "base_url": "http://127.0.0.1:8000",
  "authentication": "Required for all endpoints - Bearer token authentication",
  "authorization": "User must be assigned as a department manager in the system",
  "note": "7 endpoints are currently implemented. Some routes exist in api.php but their corresponding controller methods are not implemented.",
  "items": [
    {
      "name": "Get Department Manager Dashboard",
      "description": "Retrieves comprehensive dashboard overview including managed departments, employee statistics, task summaries, workload heatmap, and recent activities",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/department-manager/dashboard",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "dashboard"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" }
        ]
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Department manager dashboard retrieved successfully",
          "data": {
            "managed_departments": [1, 2],
            "employees_count": 15,
            "task_statistics": {
              "total_assigned": 45,
              "to_do": 12,
              "doing": 18,
              "done": 13,
              "blocked": 2,
              "overdue": 5
            },
            "workload_heatmap": [
              {
                "employee_id": 1,
                "employee_name": "John Smith",
                "capacity_hours": 40,
                "planned_hours": 35,
                "percentage": 87.5,
                "status": "optimal",
                "color": "#32CD32"
              }
            ],
            "recent_tasks": [
              {
                "id": 1,
                "task_id": 5,
                "assigned_to": 3,
                "assigned_by": 1,
                "status": "doing",
                "due_date": "2025-05-30",
                "created_at": "2025-05-20T10:00:00.000000Z",
                "task": {
                  "id": 5,
                  "title": "Database optimization",
                  "description": "Optimize query performance"
                },
                "assigned_to_employee": {
                  "id": 3,
                  "first_name": "Alice",
                  "last_name": "Johnson"
                },
                "assigned_by_employee": {
                  "id": 1,
                  "first_name": "Manager",
                  "last_name": "Smith"
                }
              }
            ],
            "important_tasks_count": 8
          }
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error retrieving dashboard: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Get Available Tasks",
      "description": "Retrieves all available tasks in managed departments that can be assigned to employees",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/department-manager/available-tasks",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "available-tasks"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" }
        ]
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Available tasks retrieved successfully",
          "data": [
            {
              "id": 1,
              "title": "Frontend UI Development",
              "description": "Develop responsive user interface components",
              "department_id": 1,
              "priority": "high",
              "estimated_hours": 20,
              "status": "active",
              "created_at": "2025-05-15T09:00:00.000000Z",
              "department": {
                "id": 1,
                "name": "IT Development",
                "description": "Software development team"
              }
            }
          ]
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error retrieving available tasks: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Get Managed Employees",
      "description": "Retrieves detailed information about all employees in managed departments including workload data",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/department-manager/task-assignment/employees",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "task-assignment", "employees"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" }
        ]
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Managed employees retrieved successfully",
          "data": [
            {
              "id": 1,
              "name": "John Smith",
              "email": "john.smith@company.com",
              "department": "IT Development",
              "workload": {
                "capacity_hours": 40,
                "planned_hours": 35,
                "percentage": 87.5,
                "status": "optimal"
              }
            }
          ]
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error retrieving managed employees: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Get Managed Employees Simple",
      "description": "Retrieves simplified list of employees in managed departments for dropdown selections with just ID, name, email, and department",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/department-manager/task-assignment/employees/simple",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "task-assignment", "employees", "simple"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" }
        ]
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Managed employees list retrieved successfully",
          "data": [
            {
              "id": 1,
              "name": "John Smith",
              "email": "john.smith@company.com",
              "department_name": "IT Development"
            },
            {
              "id": 2,
              "name": "Jane Doe",
              "email": "jane.doe@company.com",
              "department_name": "IT Development"
            }
          ]
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error retrieving managed employees list: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Assign Task",
      "description": "Assigns a task to one or multiple employees in the managed departments with specified permissions and details. Supports both single employee assignment and bulk assignment to multiple employees.",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{base_url}}/api/department-manager/task-assignment/assign",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "task-assignment", "assign"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": {
            "task_id": 1,
            "employee_ids": [3, 5, 7],
            "due_date": "2025-06-01",
            "estimated_hours": 16,
            "permission_level": "full_edit",
            "assignment_notes": "High priority task, coordinate with frontend team",
            "_note": "Use 'employee_id' for single assignment or 'employee_ids' for multiple assignments"
          }
        }
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Task assignment completed successfully",
          "data": {
            "assigned_tasks": [
              {
                "id": 15,
                "task_id": 1,
                "assigned_to": 3,
                "assigned_by": 1,
                "due_date": "2025-06-01",
                "estimated_hours": 16,
                "permission_level": "full_edit",
                "assignment_notes": "High priority task, coordinate with frontend team",
                "status": "to-do",
                "progress_points": 0,
                "actual_hours": 0,
                "is_important": false,
                "is_pinned": false,
                "created_at": "2025-05-25T11:00:00.000000Z",
                "updated_at": "2025-05-25T11:00:00.000000Z",
                "task": {
                  "id": 1,
                  "title": "Frontend UI Development",
                  "description": "Develop responsive user interface components"
                },
                "assigned_to_employee": {
                  "id": 3,
                  "first_name": "Alice",
                  "last_name": "Johnson"
                },
                "assigned_by_employee": {
                  "id": 1,
                  "first_name": "Manager",
                  "last_name": "Smith"
                }
              }
            ],
            "total_assigned": 3,
            "already_assigned": ["John Doe"],
            "errors": []
          }
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 404,
          "body": {
            "message": "Task not found in your managed departments",
            "data": []
          }
        },
        {
          "status": 422,
          "body": {
            "message": "Task is already assigned to this employee",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error assigning task: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Remove Task Assignment",
      "description": "Removes/deletes a user assignment from a task and updates employee workload accordingly",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{base_url}}/api/department-manager/task-assignment/remove",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "task-assignment", "remove"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": {
            "task_id": 1,
            "employee_id": 3,
            "reason": "Task no longer required for this employee"
          }
        }
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Task assignment removed successfully",
          "data": {
            "task_id": 1,
            "employee_id": 3,
            "employee_name": "Alice Johnson",
            "task_title": "Frontend UI Development",
            "reason": "Task no longer required for this employee"
          }
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 404,
          "body": {
            "message": "Task assignment not found for this employee",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error removing task assignment: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Update Task Assignment",
      "description": "Updates an existing task assignment's due date, estimated hours, permission level, and assignment notes",
      "request": {
        "method": "PUT",
        "url": {
          "raw": "{{base_url}}/api/department-manager/task-assignment/update",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "task-assignment", "update"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": {
            "task_id": 1,
            "employee_id": 3,
            "due_date": "2025-07-01",
            "estimated_hours": 24,
            "permission_level": "full_edit",
            "assignment_notes": "Updated requirements - additional features needed"
          }
        }
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Task assignment updated successfully",
          "data": {
            "assigned_task": {
              "id": 15,
              "task_id": 1,
              "assigned_to": 3,
              "assigned_by": 1,
              "due_date": "2025-07-01",
              "estimated_hours": 24,
              "permission_level": "full_edit",
              "assignment_notes": "Updated requirements - additional features needed",
              "status": "to-do",
              "created_at": "2025-05-25T11:00:00.000000Z",
              "updated_at": "2025-06-11T15:30:00.000000Z",
              "task": {
                "id": 1,
                "title": "Frontend UI Development",
                "description": "Develop responsive user interface components"
              },
              "assigned_to_employee": {
                "id": 3,
                "first_name": "Alice",
                "last_name": "Johnson"
              },
              "assigned_by_employee": {
                "id": 1,
                "first_name": "Manager",
                "last_name": "Smith"
              }
            },
            "updated_fields": ["due_date", "estimated_hours", "assignment_notes"],
            "old_values": {
              "due_date": "2025-06-01",
              "estimated_hours": 16,
              "assignment_notes": "High priority task, coordinate with frontend team"
            },
            "new_values": {
              "due_date": "2025-07-01",
              "estimated_hours": 24,
              "assignment_notes": "Updated requirements - additional features needed"
            }
          }
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 404,
          "body": {
            "message": "Task assignment not found for this employee",
            "data": []
          }
        },
        {
          "status": 422,
          "body": {
            "message": "No valid fields to update",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error updating task assignment: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Get Task Assignment Details",
      "description": "Retrieves specific task assignment details including due date, estimated hours, permission level, and assignment notes by task_id and employee_id",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{base_url}}/api/department-manager/task-assignment/details",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "task-assignment", "details"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": {
            "task_id": 1,
            "employee_id": 2
          }
        }
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Task assignment details retrieved successfully",
          "data": {
            "assignment_id": 15,
            "task_id": 1,
            "employee_id": 2,
            "due_date": "2025-07-01",
            "estimated_hours": 24,
            "permission_level": "full_edit",
            "assignment_notes": "Updated requirements - additional features needed",
            "status": "to-do",
            "is_important": true,
            "is_pinned": false,
            "created_at": "2025-05-25T11:00:00.000000Z",
            "updated_at": "2025-06-11T15:30:00.000000Z",
            "task": {
              "id": 1,
              "title": "Frontend UI Development",
              "description": "Develop responsive user interface components"
            },
            "employee": {
              "id": 2,
              "first_name": "John",
              "last_name": "Smith",
              "email": "john.smith@company.com"
            },
            "assigned_by": {
              "id": 1,
              "first_name": "Manager",
              "last_name": "Admin"
            }
          }
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 404,
          "body": {
            "message": "Task assignment not found for this employee",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error retrieving task assignment details: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Get Workload Heatmap",
      "description": "Retrieves workload distribution data for all managed employees showing capacity, utilization, and status",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/department-manager/workload-heatmap",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "workload-heatmap"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" }
        ]
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Workload heatmap retrieved successfully",
          "data": [
            {
              "employee_id": 1,
              "employee_name": "John Smith",
              "capacity_hours": 40,
              "planned_hours": 35,
              "percentage": 87.5,
              "status": "optimal",
              "color": "#32CD32"
            },
            {
              "employee_id": 2,
              "employee_name": "Jane Doe",
              "capacity_hours": 40,
              "planned_hours": 48,
              "percentage": 120,
              "status": "over_loaded",
              "color": "#FFA500"
            },
            {
              "employee_id": 3,
              "employee_name": "Alice Johnson",
              "capacity_hours": 40,
              "planned_hours": 25,
              "percentage": 62.5,
              "status": "under_utilized",
              "color": "#90EE90"
            }
          ]
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error retrieving workload heatmap: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Bulk Task Operation",
      "description": "Initiates bulk operations on multiple assigned tasks such as reassigning, updating status, changing due dates, or deleting tasks",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{base_url}}/api/department-manager/bulk-operations/tasks",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "bulk-operations", "tasks"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": {
            "operation_type": "update_status",
            "task_ids": [1, 2, 3, 4],
            "operation_data": {
              "new_status": "doing"
            },
            "notes": "Moving selected tasks to in-progress status"
          }
        }
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Bulk operation initiated successfully",
          "data": {
            "id": 5,
            "initiated_by": 1,
            "operation_type": "update_status",
            "task_ids": [1, 2, 3, 4],
            "operation_data": {
              "new_status": "doing"
            },
            "total_tasks": 4,
            "processed_tasks": 0,
            "failed_tasks": 0,
            "notes": "Moving selected tasks to in-progress status",
            "status": "pending",
            "error_log": null,
            "started_at": null,
            "completed_at": null,
            "created_at": "2025-05-25T12:00:00.000000Z",
            "updated_at": "2025-05-25T12:00:00.000000Z"
          }
        }
      },
      "errorResponses": [
        {
          "status": 403,
          "body": {
            "message": "Access denied. Department manager role required.",
            "data": []
          }
        },
        {
          "status": 422,
          "body": {
            "message": "The operation_type field is required.",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error initiating bulk operation: [error details]",
            "data": []
          }
        }
      ]
    },
    {
      "name": "Get Employee Assigned Tasks",
      "description": "Retrieves all tasks assigned to a specific employee in the managed departments",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/department-manager/employees/{employeeId}/assigned-tasks",
          "host": ["{{base_url}}"],
          "path": ["api", "department-manager", "employees", "{employeeId}", "assigned-tasks"]
        },
        "headers": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Accept", "value": "application/json" }
        ],
        "pathVariables": [
          {
            "key": "employeeId",
            "value": "1",
            "description": "The ID of the employee to get assigned tasks for"
          }
        ]
      },
      "response": {
        "status": 200,
        "body": {
          "message": "Employee assigned tasks fetched successfully",
          "data": [
            {
              "id": 1,
              "task_id": 5,
              "assigned_to": 1,
              "assigned_by": 2,
              "due_date": "2025-06-15",
              "estimated_hours": 20,
              "actual_hours": 8,
              "progress_points": 45,
              "status": "doing",
              "is_important": true,
              "is_pinned": true,
              "permission_level": "full_edit",
              "assignment_notes": "High priority frontend task",
              "created_at": "2025-05-20T10:00:00.000000Z",
              "updated_at": "2025-06-08T14:30:00.000000Z",
              "task": {
                "id": 5,
                "title": "Frontend UI Development",
                "description": "Develop responsive user interface components",
                "department_id": 1,
                "priority": "high",
                "estimated_hours": 20,
                "status": "active"
              },
              "assignedBy": {
                "id": 2,
                "first_name": "Jane",
                "last_name": "Manager",
                "email": "jane.manager@company.com"
              }
            }
          ]
        }
      },
      "errorResponses": [
        {
          "status": 404,
          "body": {
            "message": "Employee not found",
            "data": []
          }
        },
        {
          "status": 500,
          "body": {
            "message": "Error fetching assigned tasks: [error details]",
            "data": []
          }
        }
      ]
    }
  ],
  "notes": {
    "implemented_endpoints": [
      "GET /api/department-manager/dashboard -> DepartmentManagerController@getDashboard",
      "GET /api/department-manager/available-tasks -> DepartmentManagerController@getAvailableTasks",
      "GET /api/department-manager/task-assignment/employees -> DepartmentManagerController@getManagedEmployees",
      "GET /api/department-manager/task-assignment/employees/simple -> DepartmentManagerController@getManagedEmployeesSimple",
      "POST /api/department-manager/task-assignment/assign -> DepartmentManagerController@assignTask",
      "POST /api/department-manager/task-assignment/remove -> DepartmentManagerController@removeTaskAssignment",
      "PUT /api/department-manager/task-assignment/update -> DepartmentManagerController@updateTaskAssignment",
      "POST /api/department-manager/task-assignment/details -> DepartmentManagerController@getTaskAssignmentDetails",
      "GET /api/department-manager/workload-heatmap -> DepartmentManagerController@getWorkloadHeatmap",
      "POST /api/department-manager/bulk-operations/* -> DepartmentManagerController@bulkTaskOperation",
      "GET /api/department-manager/employees/{employeeId}/assigned-tasks -> DepartmentController@getEmployeeAssignedTasks"
    ],
    "route_controller_mismatch": "Some routes in api.php reference methods that don't exist in the controller like generateWorkloadHeatmapData, getProgressOverview, getDepartmentEmployees, etc.",
    "missing_implementations": [
      "generateWorkloadHeatmapData (route exists but method name mismatch)",
      "getProgressOverview", "getDepartmentEmployees", "getAssignedTasks",
      "updateTaskPermissions", "updateTaskStatus", "deleteAssignedTask",
      "bulkAssignTasks", "bulkUpdateTaskStatus", "bulkUpdateDeadlines",
      "getBulkOperationHistory", "getBulkOperationStatus"
    ],
    "bulk_operation_types": [
      "reassign - Reassign tasks to different employees",
      "update_status - Change task status (to-do, doing, done, blocked)",
      "update_due_date - Modify due dates",
      "update_priority - Change importance flag",
      "bulk_delete - Delete multiple tasks"
    ],
    "permission_levels": [
      "view_only - Employee can only view task details",
      "edit_progress - Employee can update progress and status",
      "full_edit - Employee can modify all task fields"
    ],
    "workload_statuses": [
      "under_utilized - Less than 70% capacity",
      "optimal - 70-100% capacity",
      "over_loaded - 100-120% capacity",
      "critical - Over 120% capacity"
    ]
  }
}
